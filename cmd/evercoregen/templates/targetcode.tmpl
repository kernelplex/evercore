// Code generated by evercore; DO NOT EDIT.
package {{.Config.OutputPkg}}

import (
	"fmt"
	"github.com/kernelplex/evercore/base"

	events "{{.ModuleName}}/{{.Config.OutputDir}}/events"

	{{- range .UniqueImports}}
	"{{.}}"
	{{- end}}
)

func StateEventDecoder(_ string, ev evercore.SerializedEvent) (evercore.EventState, error) {
	switch ev.EventType {

	{{- if .StateEvents}}

	// ================================================== 
	// State Events
	// ================================================== 

	{{- range $key, $value := .StateEvents}}
	case events.{{$key}}Type:
		eventState := {{$value.PackageName}}.{{$value.Struct}} {}
		err := evercore.DecodeEventStateTo(ev, &eventState)
		if err != nil {
			return nil, err
		}
		state := evercore.NewStateEvent(eventState)
		return state, nil
	{{- end}}
	{{- end}}
}

func init() {
	evercore.RegisterStateEventDecoder(StateEventDecoder)
}
